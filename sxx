-- Advanced obfuscation - High-end executors recommended
-- Full protection suite enabled

local _0x592ef8 = function()
    local _env = getfenv()
    if _env.debug or _env.getfenv ~= getfenv then
        error("Tampering detected!", 0)
    end
end
local _0xf333fd = function()
    if debug and debug.getinfo then
        error("Debug environment detected!", 0)
    end
    if getfenv().debug then
        while true do end
    end
end
local _0xf39aa2 = function()
    local _vm_check = {
        game and game.PlaceId == 0,
        not game or not game.GetService,
        getfenv().bit32 == nil
    }
    for i,v in pairs(_vm_check) do
        if v then error("Virtual environment detected!", 0) end
    end
end
local _0xd40ab1 = "kqhbo24w4n"
local function _verify()
    local _current = tostring(debug.getinfo(1).source):gsub("%W", "")
    if #_current ~= #_0x23aa34 then
        error("Integrity violation!", 0)
    end
end

local _0x6bb5cef6 = {}
_0x6bb5cef6[1] = function()
    if game and workspace then
        local _dead_1290 = function()
            return nil
        end
        local _0x0277ba = true
        if _0x0277ba then
            local _0x213713 = { Print = function() if (isStudio) then assert(isStudio, string.char(70,117,110,99,116,105,111,110,32,70,97,105,108,101,100,32,116,111,32,116,101,115,116,32,109,105,115,115,105,110,103,32,101,120,101,99,117,116,111,114,102,117,110,99,116,105,111,110,115)) end local _0xd423b9 = {key = string.char(118,97,108,117,101)} local _0x56ca7d = function() return string.char(102,117,110,99) end print(string.char(80,114,105,110,116,84,101,115,116,83,111,109,101,116,104,105,110,103,32,62), 123, true, testTable, testFunc) end, Warn = function() if (isStudio) then assert(isStudio, string.char(70,117,110,99,116,105,111,110,32,70,97,105,108,101,100,32,116,111,32,116,101,115,116,32,109,105,115,115,105,110,103,32,101,120,101,99,117,116,111,114,102,117,110,99,116,105,111,110,115)) end local _0x5de68b = string.char(9888,65039,32,87,97,114,110,84,101,115,116) local _0x83fddf = debug.traceback(warningMessage, 2) warn(tb) assert(tb:find(string.char(87,97,114,110,84,101,115,116)), string.char(87,97,114,110,105,110,103,32,109,101,115,115,97,103,101,32,100,105,100,110,39,116,32,99,111,110,116,97,105,110,32,101,120,112,101,99,116,101,100,32,99,111,110,116,101,110,116)) end, Type = function() if (isStudio) then assert(isStudio, string.char(70,117,110,99,116,105,111,110,32,70,97,105,108,101,100,32,116,111,32,116,101,115,116,32,109,105,115,115,105,110,103,32,101,120,101,99,117,116,111,114,102,117,110,99,116,105,111,110,115)) end assert(typeof(string.char(116,101,115,116)) == string.char(115,116,114,105,110,103), string.char(69,120,112,101,99,116,101,100,32,115,116,114,105,110,103)) assert(typeof(123) == string.char(110,117,109,98,101,114), string.char(69,120,112,101,99,116,101,100,32,110,117,109,98,101,114)) assert(typeof(true) == string.char(98,111,111,108,101,97,110), string.char(69,120,112,101,99,116,101,100,32,98,111,111,108,101,97,110)) assert(typeof({}) == string.char(116,97,98,108,101), string.char(69,120,112,101,99,116,101,100,32,116,97,98,108,101)) assert(typeof(function() end) == string.char(102,117,110,99,116,105,111,110), string.char(69,120,112,101,99,116,101,100,32,102,117,110,99,116,105,111,110)) end, Loadstring = function() local _0xf7bb02 = setmetatable({}, {__index = _G}) local _0xacea05 = string.char(114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,120,41,32,114,101,116,117,114,110,32,120,32,42,32,120,32,101,110,100) local _0x980369 = assert(loadstring(code), string.char(70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,115,116,114,105,110,103)) setfenv(loaded, env) local _0xb3ef23 = loaded() local _0xbb9779 = func(6) assert(result == 36, string.char(76,111,97,100,115,116,114,105,110,103,32,102,97,105,108,101,100,32,116,111,32,99,111,109,112,117,116,101,32,115,113,117,97,114,101,32,99,111,114,114,101,99,116,108,121)) end, Assert = function() if (isStudio) then assert(isStudio, string.char(70,117,110,99,116,105,111,110,32,70,97,105,108,101,100,32,116,111,32,116,101,115,116,32,109,105,115,115,105,110,103,32,101,120,101,99,117,116,111,114,102,117,110,99,116,105,111,110,115)) end assert(type(1) == string.char(110,117,109,98,101,114) and 1 > 0, string.char(65,115,115,101,114,116,32,116,101,115,116,32,102,97,105,108,101,100,58,32,110,117,109,98,101,114)) assert(type(string.char(82,111,98,108,111,120)) == string.char(115,116,114,105,110,103) and #string.char(82,111,98,108,111,120) >= 6, string.char(65,115,115,101,114,116,32,116,101,115,116,32,102,97,105,108,101,100,58,32,115,116,114,105,110,103)) assert(type(true) == string.char(98,111,111,108,101,97,110) and not not true, string.char(65,115,115,101,114,116,32,116,101,115,116,32,102,97,105,108,101,100,58,32,98,111,111,108,101,97,110)) assert(type({1, 2, 3}) == string.char(116,97,98,108,101), string.char(65,115,115,101,114,116,32,116,101,115,116,32,102,97,105,108,101,100,58,32,116,97,98,108,101)) assert(type(function() end) == string.char(102,117,110,99,116,105,111,110), string.char(65,115,115,101,114,116,32,116,101,115,116,32,102,97,105,108,101,100,58,32,102,117,110,99,116,105,111,110)) end, ErrorHandling = function() if (isStudio) then assert(isStudio, string.char(70,117,110,99,116,105,111,110,32,70,97,105,108,101,100,32,116,111,32,116,101,115,116,32,109,105,115,115,105,110,103,32,101,120,101,99,117,116,111,114,102,117,110,99,116,105,111,110,115)) end local _0x8e8bcd throwError() error({ code = 500, message = string.char(73,110,116,101,110,116,105,111,110,97,108,32,101,114,114,111,114,32,102,111,114,32,116,101,115,116) }) end local _0x8e8bcd errorHandler(err) assert(typeof(err) == string.char(116,97,98,108,101), string.char(69,114,114,111,114,32,119,97,115,32,110,111,116,32,116,97,98,108,101)) assert(err.code == 500, string.char(69,114,114,111,114,32,99,111,100,101,32,109,105,115,109,97,116,99,104)) assert(err.message == string.char(73,110,116,101,110,116,105,111,110,97,108,32,101,114,114,111,114,32,102,111,114,32,116,101,115,116), string.char(69,114,114,111,114,32,109,101,115,115,97,103,101,32,109,105,115,109,97,116,99,104)) return err end local _0x188502, caught = xpcall(throwError, errorHandler) assert(not success, string.char(69,120,112,101,99,116,101,100,32,102,117,110,99,116,105,111,110,32,95,48,120,100,52,49,50,100,102,56,57,32,102,97,105,108)) assert(caught.code == 500, string.char(70,97,105,108,101,100,32,116,111,32,99,97,116,99,104,32,99,111,114,114,101,99,116,32,101,114,114,111,114)) end, Getgenv = function() local _0xf7bb02 = getgenv() env.testVar = string.char(116,101,115,116) assert(env.testVar == string.char(116,101,115,116), string.char(71,108,111,98,97,108,32,101,110,118,105,114,111,110,109,101,110,116,32,118,97,114,105,97,98,108,101,32,110,111,116,32,112,114,111,112,101,114,108,121,32,115,101,116)) end, Getrenv = function() local _0x9b84ce = getrenv() assert(type(renv) == string.char(116,97,98,108,101), string.char(69,120,112,101,99,116,101,100,32,101,110,118,105,114,111,110,109,101,110,116,32,116,111,32,98,101,32,97,32,116,97,98,108,101)) assert(renv._G, string.char(69,120,112,101,99,116,101,100,32,101,110,118,105,114,111,110,109,101,110,116,32,116,111,32,104,97,118,101,32,95,71,32,103,108,111,98,97,108)) end, Getsenv = function() assert(type(getsenv) == string.char(102,117,110,99,116,105,111,110), string.char(70,117,110,99,116,105,111,110,32,105,115,32,110,105,108)) local _0x1a0b4b = game:GetService(string.char(80,108,97,121,101,114,115)).LocalPlayer.Character.Animate local _0xf7bb02 = getsenv(animate) assert(type(env) == string.char(116,97,98,108,101), string.char(68,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,116,97,98,108,101,32,102,111,114,32,67,104,97,114,97,99,116,101,114,46,65,110,105,109,97,116,101,32,40,97,32) .. animate.ClassName .. string.char(41)) assert(env.script == animate, string.char(84,104,101,32,115,99,114,105,112,116,32,103,108,111,98,97,108,32,105,115,32,110,111,116,32,105,100,101,110,116,105,99,97,108,32,116,111,32,67,104,97,114,97,99,116,101,114,46,65,110,105,109,97,116,101)) end, SetFenv = function() if (isStudio) then assert(isStudio, string.char(70,117,110,99,116,105,111,110,32,70,97,105,108,101,100,32,116,111,32,116,101,115,116,32,109,105,115,115,105,110,103,32,101,120,101,99,117,116,111,114,102,117,110,99,116,105,111,110,115)) end assert(typeof(setfenv) == string.char(102,117,110,99,116,105,111,110), string.char(102,117,110,99,116,105,111,110,32,95,48,120,57,53,101,56,49,54,56,50,32,110,105,108)) local _0x86e2da = { print = print } local _0x56ca7d = function() print(string.char(69,78,86,32,84,69,83,84)) end setfenv(testFunc, newEnv) local _0x228947 = getfenv(testFunc) assert(currentEnv == newEnv, string.char(115,101,116,102,101,110,118,32,102,97,105,108,101,100,32,116,111,32,97,112,112,108,121,32,116,104,101,32,101,110,118,105,114,111,110,109,101,110,116)) end, GetFenv = function() if (isStudio) then assert(isStudio, string.char(70,117,110,99,116,105,111,110,32,70,97,105,108,101,100,32,116,111,32,116,101,115,116,32,109,105,115,115,105,110,103,32,101,120,101,99,117,116,111,114,102,117,110,99,116,105,111,110,115)) end assert(typeof(getfenv) == string.char(102,117,110,99,116,105,111,110), string.char(102,117,110,99,116,105,111,110,32,95,48,120,50,50,50,99,54,48,99,55,32,110,105,108)) local _0xf7bb02 = getfenv(1) assert(typeof(env) == string.char(116,97,98,108,101), string.char(103,101,116,102,101,110,118,32,100,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,118,97,108,105,100,32,116,97,98,108,101)) assert(env.script or env._G or env.print, string.char(69,110,118,105,114,111,110,109,101,110,116,32,116,97,98,108,101,32,115,101,101,109,115,32,105,110,118,97,108,105,100,32,40,109,105,115,115,105,110,103,32,99,111,109,109,111,110,32,107,101,121,115,41)) end, CheckCaller = function() local _0xbb9779 = checkcaller() assert(type(result) == string.char(98,111,111,108,101,97,110), string.char(67,97,108,108,101,114,32,99,104,101,99,107,32,115,104,111,117,108,100,32,114,101,116,117,114,110,32,97,32,98,111,111,108,101,97,110)) end, NewCClosure = function() local _0x6626f3 = newcclosure(function(x) return x * 2 end) assert(wrapped(5) == 10, string.char(78,101,119,32,67,32,99,108,111,115,117,114,101,32,102,97,105,108,101,100,32,116,111,32,114,101,116,117,114,110,32,99,111,114,114,101,99,116,32,114,101,115,117,108,116)) end, GetThreadIdentity = function() assert(type(getthreadidentity) == string.char(102,117,110,99,116,105,111,110), string.char(70,117,110,99,116,105,111,110,32,105,115,32,110,105,108)) local _0x8b9181 = getthreadidentity() assert(type(identity) == string.char(110,117,109,98,101,114), string.char(69,120,112,101,99,116,101,100,32,116,104,114,101,97,100,32,105,100,101,110,116,105,116,121,32,116,111,32,98,101,32,97,32,110,117,109,98,101,114)) assert(identity >= 0, string.char(69,120,112,101,99,116,101,100,32,116,104,114,101,97,100,32,105,100,101,110,116,105,116,121,32,116,111,32,98,101,32,110,111,110,45,110,101,103,97,116,105,118,101)) end, Setthreadidentity = function() setthreadidentity(3) assert(getthreadidentity() == 3, string.char(68,105,100,32,110,111,116,32,115,101,116,32,116,104,101,32,116,104,114,101,97,100,32,105,100,101,110,116,105,116,121)) end, GetRawMetatable = function() local _0x0448a7 = getrawmetatable(game) assert(type(mt) == string.char(116,97,98,108,101), string.char(69,120,112,101,99,116,101,100,32,114,97,119,32,109,101,116,97,116,97,98,108,101,32,116,111,32,98,101,32,97,32,116,97,98,108,101)) assert(mt.__index, string.char(69,120,112,101,99,116,101,100,32,109,101,116,97,116,97,98,108,101,32,116,111,32,104,97,118,101,32,95,95,105,110,100,101,120)) end, SetRawMetatable = function() local _0x2ac929 = {} local _0x0448a7 = { __index = function(t,k) return k..string.char(95,109,111,100,105,102,105,101,100) end, __newindex = function(t,k,v) rawset(t,k..string.char(95,112,114,111,116,101,99,116,101,100),v) end } setrawmetatable(tbl, mt) assert(tbl.test == string.char(116,101,115,116,95,109,111,100,105,102,105,101,100), string.char(70,97,105,108,101,100,32,116,111,32,109,111,100,105,102,121,32,95,95,105,110,100,101,120,32,118,105,97,32,114,97,119,32,109,101,116,97,116,97,98,108,101)) end, HookFunction = function() local _0x8e8bcd test() return true end local _0xcae2a3 = hookfunction(test, function() return false end) assert(test() == false, string.char(70,117,110,99,116,105,111,110,32,115,104,111,117,108,100,32,114,101,116,117,114,110,32,102,97,108,115,101)) assert(ref() == true, string.char(79,114,105,103,105,110,97,108,32,102,117,110,99,116,105,111,110,32,95,48,120,100,57,54,101,55,101,100,100,32,114,101,116,117,114,110,32,116,114,117,101)) assert(test ~= ref, string.char(79,114,105,103,105,110,97,108,32,102,117,110,99,116,105,111,110,32,95,48,120,53,49,49,97,49,53,53,52,32,110,111,116,32,98,101,32,115,97,109,101,32,97,115,32,116,104,101,32,114,101,102,101,114,101,110,99,101)) end, HookMetamethod = function() local _0x42a6f5 = setmetatable({}, { __index = newcclosure(function() return false end), __metatable = string.char(76,111,99,107,101,100,33) }) local _0xcae2a3 = hookmetamethod(object, string.char(95,95,105,110,100,101,120), function() return true end) assert(object.test == true, string.char(70,97,105,108,101,100,32,116,111,32,104,111,111,107,32,97,32,109,101,116,97,109,101,116,104,111,100,32,97,110,100,32,99,104,97,110,103,101,32,116,104,101,32,114,101,116,117,114,110,32,118,97,108,117,101)) assert(ref() == false, string.char(68,105,100,32,110,111,116,32,114,101,116,117,114,110,32,116,104,101,32,111,114,105,103,105,110,97,108,32,102,117,110,99,116,105,111,110)) end, GetNamecallMethod = function() local _0x91d5d6 local _0xcae2a3 ref = hookmetamethod(game, string.char(95,95,110,97,109,101,99,97,108,108), function(...) if not method then method = getnamecallmethod() end return ref(...) end) game:GetService(string.char(76,105,103,104,116,105,110,103)) assert(method == string.char(71,101,116,83,101,114,118,105,99,101), string.char(68,105,100,32,110,111,116,32,103,101,116,32,116,104,101,32,99,111,114,114,101,99,116,32,109,101,116,104,111,100,32,40,71,101,116,83,101,114,118,105,99,101,41)) end, SetNamecallMethod = function() setnamecallmethod(string.char(70,105,114,101,83,101,114,118,101,114)) assert(getnamecallmethod() == string.char(70,105,114,101,83,101,114,118,101,114), string.char(70,97,105,108,101,100,32,116,111,32,115,101,116,32,110,97,109,101,99,97,108,108,32,109,101,116,104,111,100,32,99,111,114,114,101,99,116,108,121)) end, Getgc = function() local _0x0ef441 = getgc(true) assert(type(gc) == string.char(116,97,98,108,101), string.char(69,120,112,101,99,116,101,100,32,103,97,114,98,97,103,101,32,99,111,108,108,101,99,116,111,114,32,108,105,115,116,32,116,111,32,98,101,32,97,32,116,97,98,108,101)) assert(#gc > 0, string.char(69,120,112,101,99,116,101,100,32,97,116,32,108,101,97,115,116,32,111,110,101,32,111,98,106,101,99,116,32,105,110,32,103,97,114,98,97,103,101,32,99,111,108,108,101,99,116,111,114,32,108,105,115,116)) end, GetRegistry = function() local _0x08e359 = getreg() assert(type(reg) == string.char(116,97,98,108,101), string.char(69,120,112,101,99,116,101,100,32,114,101,103,105,115,116,114,121,32,116,111,32,98,101,32,97,32,116,97,98,108,101)) assert(#reg > 0, string.char(69,120,112,101,99,116,101,100,32,110,111,110,45,101,109,112,116,121,32,114,101,103,105,115,116,114,121)) end, GetConstants = function() local _0x8e8bcd test() print(string.char(72,101,108,108,111,44,32,119,111,114,108,100,33)) end assert(debug.getconstant(test, 1) == string.char(112,114,105,110,116), string.char(70,105,114,115,116,32,99,111,110,115,116,97,110,116,32,109,117,115,116,32,98,101,32,112,114,105,110,116)) assert(debug.getconstant(test, 2) == nil, string.char(83,101,99,111,110,100,32,99,111,110,115,116,97,110,116,32,109,117,115,116,32,98,101,32,110,105,108)) assert(debug.getconstant(test, 3) == string.char(72,101,108,108,111,44,32,119,111,114,108,100,33), string.char(84,104,105,114,100,32,99,111,110,115,116,97,110,116,32,109,117,115,116,32,98,101,32,39,72,101,108,108,111,44,32,119,111,114,108,100,33,39)) end, GetUpvalues = function() local _0xcfbedd = string.char(102,111,111) local _0x2a92b3 = string.char(98,97,114) local _0x8e8bcd multi() return secret1, secret2 end local _0x4446ad = debug.getupvalues(multi) assert(type(ups) == string.char(116,97,98,108,101), string.char(69,120,112,101,99,116,101,100,32,116,97,98,108,101,32,102,114,111,109,32,103,101,116,117,112,118,97,108,117,101,115)) assert(ups[1] == secret1, string.char(69,120,112,101,99,116,101,100,32,102,105,114,115,116,32,117,112,118,97,108,117,101,32,39,102,111,111,39,44,32,103,111,116,32)..tostring(ups[1])) assert(ups[2] == secret2, string.char(69,120,112,101,99,116,101,100,32,115,101,99,111,110,100,32,117,112,118,97,108,117,101,32,39,98,97,114,39,44,32,103,111,116,32)..tostring(ups[2])) end, HTTP = function() local _0xb47f61 = game:HttpGet(string.char(104,116,116,112,115,58,47,47,97,112,105,46,103,105,116,104,117,98,46,99,111,109,47,117,115,101,114,115,47,103,105,116,104,117,98)) local _0x188502 = response:find(string.char(108,111,103,105,110)) ~= nil local _0xa05390 = request({ Url = string.char(104,116,116,112,115,58,47,47,104,116,116,112,98,105,110,46,111,114,103,47,112,111,115,116), Method = string.char(80,79,83,84), Headers = { [string.char(67,111,110,116,101,110,116,45,84,121,112,101)] = string.char(97,112,112,108,105,99,97,116,105,111,110,47,106,115,111,110) }, Body = game:GetService(string.char(72,116,116,112,83,101,114,118,105,99,101)):JSONEncode({ test = string.char(100,97,116,97), number = 123 }) }) assert(success and postResponse.Success, string.char(72,84,84,80,32,114,101,113,117,101,115,116,32,111,114,32,80,79,83,84,32,102,97,105,108,101,100)) end, WebSocketHandler = function() local _0xee646f = { Send = string.char(102,117,110,99,116,105,111,110), Close = string.char(102,117,110,99,116,105,111,110), OnMessage = {string.char(116,97,98,108,101), string.char(117,115,101,114,100,97,116,97)}, OnClose = {string.char(116,97,98,108,101), string.char(117,115,101,114,100,97,116,97)}, } local _0x519ab8 = WebSocket.connect(string.char(119,115,58,47,47,101,99,104,111,46,119,101,98,115,111,99,107,101,116,46,101,118,101,110,116,115)) assert(type(ws) == string.char(116,97,98,108,101) or type(ws) == string.char(117,115,101,114,100,97,116,97), string.char(68,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,116,97,98,108,101,32,111,114,32,117,115,101,114,100,97,116,97)) for k, v in pairs(types) do if type(v) == string.char(116,97,98,108,101) then assert(table.find(v, type(ws[k])), string.char(68,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32) .. table.concat(v, string.char(44,32)) .. string.char(32,102,111,114,32) .. k .. string.char(32,40,97,32) .. type(ws[k]) .. string.char(41)) else assert(type(ws[k]) == v, string.char(68,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32) .. v .. string.char(32,102,111,114,32) .. k .. string.char(32,40,97,32) .. type(ws[k]) .. string.char(41)) end end ws:Close() end, DebugInfo = function() local _0xee646f = { source = string.char(115,116,114,105,110,103), short_src = string.char(115,116,114,105,110,103), func = string.char(102,117,110,99,116,105,111,110), what = string.char(115,116,114,105,110,103), currentline = string.char(110,117,109,98,101,114), name = string.char(115,116,114,105,110,103), nups = string.char(110,117,109,98,101,114), numparams = string.char(110,117,109,98,101,114), is_vararg = string.char(110,117,109,98,101,114), } local _0x8e8bcd test(...) print(...) end local _0x7b5d63 = debug.getinfo(test) for k, v in pairs(types) do assert(info[k] ~= nil, string.char(68,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,116,97,98,108,101,32,119,105,116,104,32,97,32,39) .. k .. string.char(39,32,102,105,101,108,100)) assert(type(info[k]) == v, string.char(68,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,116,97,98,108,101,32,119,105,116,104,32) .. k .. string.char(32,97,115,32,97,32) .. v .. string.char(32,40,103,111,116,32) .. type(info[k]) .. string.char(41)) end end, DebugGetUpvalue = function() local _0xe3025b = function() end local _0x8e8bcd test() print(upvalue) end assert(debug.getupvalue(test, 1) == upvalue, string.char(85,110,101,120,112,101,99,116,101,100,32,118,97,108,117,101,32,114,101,116,117,114,110,101,100,32,102,114,111,109,32,100,101,98,117,103,46,103,101,116,117,112,118,97,108,117,101)) end, DebugSetUpvalue = function() local _0x8e8bcd upvalue() return string.char(102,97,105,108) end local _0x8e8bcd test() return upvalue() end debug.setupvalue(test, 1, function() return string.char(115,117,99,99,101,115,115) end) assert(test() == string.char(115,117,99,99,101,115,115), string.char(100,101,98,117,103,46,115,101,116,117,112,118,97,108,117,101,32,100,105,100,32,110,111,116,32,115,101,116,32,116,104,101,32,102,105,114,115,116,32,117,112,118,97,108,117,101)) end, DebugGetProtos = function() local _0x8e8bcd test() local _0x8e8bcd inner1() end local _0x8e8bcd inner2() end return inner1, inner2 end local _0xe9f502 = debug.getprotos(test) assert(#protos == 2, string.char(69,120,112,101,99,116,101,100,32,101,120,97,99,116,108,121,32,50,32,112,114,111,116,111,116,121,112,101,115)) end, DebugGetStack = function() local _0x8e8bcd deep3() return debug.getstack(3) end local _0x8e8bcd deep2() return deep3() end local _0x8e8bcd deep1() return deep2() end local _0xc6f5d3 = deep1() assert(type(stack) == string.char(116,97,98,108,101), string.char(69,120,112,101,99,116,101,100,32,100,101,98,117,103,32,115,116,97,99,107,32,116,111,32,114,101,116,117,114,110,32,97,32,116,97,98,108,101)) end, DebugGetMetatable = function() local _0x81ceb7 = setmetatable({}, {__index = function() return true end}) local _0x0448a7 = debug.getmetatable(t) assert(type(mt.__index) == string.char(102,117,110,99,116,105,111,110), string.char(69,120,112,101,99,116,101,100,32,109,101,116,97,116,97,98,108,101,32,95,95,105,110,100,101,120,32,116,111,32,98,101,32,97,32,102,117,110,99,116,105,111,110)) assert(mt, string.char(70,117,110,99,116,105,111,110,32,109,105,115,115,105,110,103,32,111,114,32,114,101,116,117,114,110,101,100,32,102,97,108,115,101)) end, DebugSetMetatable = function() local _0x81ceb7 = {} local _0x0448a7 = {__index = function() return string.char(105,110,116,101,114,99,101,112,116,101,100) end} debug.setmetatable(t, mt) assert(t.anything == string.char(105,110,116,101,114,99,101,112,116,101,100), string.char(70,97,105,108,101,100,32,116,111,32,105,110,116,101,114,99,101,112,116,32,119,105,116,104,32,110,101,119,32,109,101,116,97,116,97,98,108,101)) assert(t, string.char(70,117,110,99,116,105,111,110,32,109,105,115,115,105,110,103,32,111,114,32,114,101,116,117,114,110,101,100,32,102,97,108,115,101)) end, InputTests = function() for i = 1, 5 do mousemoveabs(100 + i * 50, 100 + math.sin(i) * 30) task.wait(0.1) end mouse1click() mouse2click() mouse1press() task.wait(0.1) mouse1release() keypress(0x11) keypress(0x41) task.wait(0.1) keyrelease(0x11) keyrelease(0x41) end, GetConnections = function() local _0x98f6b1 = Instance.new(string.char(80,97,114,116)) local _0x814f0d = getconnections(part.Changed) for _, connection in ipairs(connections) do connection:Enable() connection:Fire() connection:Disable() end return #connections end, FireSignal = function() assert(typeof(firesignal) == string.char(102,117,110,99,116,105,111,110), string.char(70,117,110,99,116,105,111,110,32,105,115,32,110,105,108)) local _0x5b0abc = Instance.new(string.char(66,105,110,100,97,98,108,101,69,118,101,110,116)) local _0xa97a20 = false bindableEvent.Event:Connect(function(data) triggered = data.test == string.char(115,117,99,99,101,115,115) end) firesignal(bindableEvent.Event, {test = string.char(115,117,99,99,101,115,115)}) assert(triggered, string.char(102,105,114,101,115,105,103,110,97,108,32,100,105,100,32,110,111,116,32,112,114,111,112,101,114,108,121,32,116,114,105,103,103,101,114,32,116,104,101,32,101,118,101,110,116)) end, FireClickDetector = function() assert(typeof(fireclickdetector) == string.char(102,117,110,99,116,105,111,110), string.char(102,105,114,101,99,108,105,99,107,100,101,116,101,99,116,111,114,32,110,111,116,32,97,118,97,105,108,97,98,108,101)) local _0x2a964d = Instance.new(string.char(67,108,105,99,107,68,101,116,101,99,116,111,114)) local _0x98f6b1 = Instance.new(string.char(80,97,114,116)) clickDetector.Parent = part local _0x3ecc5b = false clickDetector.MouseClick:Connect(function() clicked = true end) fireclickdetector(clickDetector, 10) end, FireProximityPrompt = function() assert(typeof(fireproximityprompt) == string.char(102,117,110,99,116,105,111,110), string.char(102,105,114,101,112,114,111,120,105,109,105,116,121,112,114,111,109,112,116,32,110,111,116,32,97,118,97,105,108,97,98,108,101)) local _0x79a172 = Instance.new(string.char(80,114,111,120,105,109,105,116,121,80,114,111,109,112,116)) prompt.ActionText = string.char(84,101,115,116,32,65,99,116,105,111,110) prompt.ObjectText = string.char(84,101,115,116,32,79,98,106,101,99,116) prompt.KeyboardKeyCode = Enum.KeyCode.E prompt.RequiresLineOfSight = false prompt.MaxActivationDistance = 10 prompt.Parent = workspace local _0xa97a20 = false prompt.Triggered:Connect(function() triggered = true end) fireproximityprompt(prompt) end, FireTouchInterest = function() assert(typeof(firetouchinterest) == string.char(102,117,110,99,116,105,111,110), string.char(102,105,114,101,116,111,117,99,104,105,110,116,101,114,101,115,116,32,110,111,116,32,97,118,97,105,108,97,98,108,101)) local _0xb4d17f = Instance.new(string.char(80,97,114,116)) local _0x384575 = Instance.new(string.char(80,97,114,116)) part1.Anchored = true part2.Anchored = true part1.Position = Vector3.new(0, 5, 0) part2.Position = Vector3.new(0, 5, 0) part1.Size = Vector3.new(4, 1, 4) part2.Size = Vector3.new(4, 1, 4) part1.Parent = workspace part2.Parent = workspace local _0x04f6db = false part1.Touched:Connect(function(hit) if hit == part2 then touched = true end end) firetouchinterest(part1, part2, 0) task.wait(0.1) firetouchinterest(part1, part2, 1) part1:Destroy() part2:Destroy() end, FileFunctions = function() makefolder(string.char(116,101,115,116,82,111,111,116)) makefolder(string.char(116,101,115,116,82,111,111,116,47,115,117,98,70,111,108,100,101,114)) local _0x18c68a = { timestamp = os.time(), array = {1, 2, 3}, nested = { key = string.char(118,97,108,117,101) }, } local _0x042d32 = HttpService:JSONEncode(testData) writefile(string.char(116,101,115,116,82,111,111,116,47,100,97,116,97,46,106,115,111,110), jsonData) writefile(string.char(116,101,115,116,82,111,111,116,47,108,111,103,46,116,120,116), string.format(string.char(91,37,115,93,32,76,111,103,32,101,110,116,114,121), os.date())) for i = 1, 3 do appendfile(string.char(116,101,115,116,82,111,111,116,47,108,111,103,46,116,120,116), string.format(string.char(91,37,115,93,32,76,111,103,32,101,110,116,114,121,32,37,100,92,110), os.date(), i)) end local _0x77a144 = HttpService:JSONDecode(readfile(string.char(116,101,115,116,82,111,111,116,47,100,97,116,97,46,106,115,111,110))) assert(readJson.timestamp == testData.timestamp, string.char(84,105,109,101,115,116,97,109,112,32,109,105,115,109,97,116,99,104,32,105,110,32,114,101,97,100,32,74,83,79,78)) local _0xda0437 = listfiles(string.char(116,101,115,116,82,111,111,116)) assert(#files >= 2, string.char(69,120,112,101,99,116,101,100,32,97,116,32,108,101,97,115,116,32,50,32,102,105,108,101,115,32,105,110,32,116,101,115,116,82,111,111,116)) writefile(string.char(116,101,115,116,82,111,111,116,47,115,99,114,105,112,116,46,108,117,97), [[ return function(x) return x * 2 end ]]) local _0x00f8f1 = loadfile(string.char(116,101,115,116,82,111,111,116,47,115,99,114,105,112,116,46,108,117,97))() assert(fn(5) == 10, string.char(76,117,97,32,115,99,114,105,112,116,32,100,105,100,32,110,111,116,32,114,101,116,117,114,110,32,101,120,112,101,99,116,101,100,32,114,101,115,117,108,116)) delfile(string.char(116,101,115,116,82,111,111,116,47,100,97,116,97,46,106,115,111,110)) delfile(string.char(116,101,115,116,82,111,111,116,47,108,111,103,46,116,120,116)) delfile(string.char(116,101,115,116,82,111,111,116,47,115,99,114,105,112,116,46,108,117,97)) delfolder(string.char(116,101,115,116,82,111,111,116,47,115,117,98,70,111,108,100,101,114)) delfolder(string.char(116,101,115,116,82,111,111,116)) end, LineDrawing = function() local _0xa60204 = Drawing.new(string.char(76,105,110,101)) line.Visible = true line.From = Vector2.new(100, 100) line.To = Vector2.new(300, 300) line.Color = Color3.fromRGB(255, 0, 0) line.Thickness = 2 line.Transparency = 0.5 return line.From.X == 100 and line.To.Y == 300 end, DrawingCircle = function() local _0xba8620 = Drawing.new(string.char(67,105,114,99,108,101)) circle.Visible = true circle.Position = Vector2.new(200, 200) circle.Radius = 50 circle.Color = Color3.fromHSV(0, 1, 1) circle.NumSides = 32 circle.Filled = true for i = 1, 10 do circle.Radius = 50 + math.sin(i) * 10 task.wait(0.1) end return circle.NumSides == 32 end, setscriptable = function() assert(typeof(setscriptable) == string.char(102,117,110,99,116,105,111,110), string.char(70,117,110,99,116,105,111,110,32,105,115,32,110,105,108)) assert(typeof(isscriptable) == string.char(102,117,110,99,116,105,111,110), string.char(105,115,115,99,114,105,112,116,97,98,108,101,32,105,115,32,114,101,113,117,105,114,101,100,32,105,110,111,114,100,101,114,32,116,111,32,116,101,115,116,32,115,101,116,115,99,114,105,112,116,97,98,108,101)) local _0x5f6aac = Instance.new(string.char(70,105,114,101)) local _0xa061bc = string.char(115,105,122,101,95,120,109,108) local _0xb5f374 = isscriptable(inst, prop) assert(initiallyScriptable == false, (string.char(80,114,111,112,101,114,116,121,32,39,37,115,39,32,115,104,111,117,108,100,32,110,111,116,32,98,101,32,115,99,114,105,112,116,97,98,108,101,32,105,110,105,116,105,97,108,108,121)):format(prop)) local _0xbb9779 = setscriptable(inst, prop, true) assert(result == false or result == true, string.char(69,120,112,101,99,116,101,100,32,98,111,111,108,101,97,110,32,114,101,116,117,114,110)) assert(isscriptable(inst, prop) == true, (string.char(80,114,111,112,101,114,116,121,32,39,37,115,39,32,119,97,115,32,110,111,116,32,109,97,100,101,32,115,99,114,105,112,116,97,98,108,101)):format(prop)) local _0x8fd58b = Instance.new(string.char(70,105,114,101)) assert(isscriptable(fresh, prop) == false, string.char(83,99,114,105,112,116,97,98,105,108,105,116,121,32,112,101,114,115,105,115,116,101,100,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,111,32,97,110,111,116,104,101,114,32,105,110,115,116,97,110,99,101)) setscriptable(inst, prop, false) assert(isscriptable(inst, prop) == false, string.char(70,97,105,108,101,100,32,116,111,32,114,101,118,101,114,116,32,115,99,114,105,112,116,97,98,105,108,105,116,121,32,116,111,32,102,97,108,115,101)) assert(isscriptable(inst, string.char(83,105,122,101)) == true, string.char(75,110,111,119,110,32,112,114,111,112,101,114,116,121,32,39,83,105,122,101,39,32,115,104,111,117,108,100,32,97,108,119,97,121,115,32,98,101,32,115,99,114,105,112,116,97,98,108,101)) end, isscriptable = function() assert(typeof(isscriptable) == string.char(102,117,110,99,116,105,111,110), string.char(70,117,110,99,116,105,111,110,32,105,115,32,110,105,108)) local _0x5f6aac = Instance.new(string.char(70,105,114,101)) assert(isscriptable(inst, string.char(115,105,122,101,95,120,109,108)) == false, string.char(70,97,108,115,101,32,112,111,115,105,116,105,118,101,58,32,39,115,105,122,101,95,120,109,108,39,32,115,104,111,117,108,100,32,110,111,116,32,98,101,32,115,99,114,105,112,116,97,98,108,101)) assert(isscriptable(inst, string.char(83,105,122,101)) == true, string.char(70,97,108,115,101,32,110,101,103,97,116,105,118,101,58,32,39,83,105,122,101,39,32,115,104,111,117,108,100,32,98,101,32,115,99,114,105,112,116,97,98,108,101)) end, getnilinstances = function() local _0x83b265 = getnilinstances() assert(typeof(nilInstances) == string.char(116,97,98,108,101), string.char(103,101,116,110,105,108,105,110,115,116,97,110,99,101,115,32,100,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,116,97,98,108,101)) assert(#nilInstances > 0, string.char(78,111,32,110,105,108,32,105,110,115,116,97,110,99,101,115,32,102,111,117,110,100,32,40,109,105,103,104,116,32,98,101,32,110,111,114,109,97,108,44,32,98,117,116,32,115,117,115,112,105,99,105,111,117,115,32,102,111,114,32,116,101,115,116,41)) assert(nilInstances[1]:IsA(string.char(73,110,115,116,97,110,99,101)), string.char(70,105,114,115,116,32,101,108,101,109,101,110,116,32,105,115,32,110,111,116,32,97,110,32,73,110,115,116,97,110,99,101)) assert(nilInstances[1].Parent == nil, string.char(70,105,114,115,116,32,105,110,115,116,97,110,99,101,39,115,32,80,97,114,101,110,116,32,105,115,32,110,111,116,32,110,105,108)) end, getinstances = function() local _0x10cbe8 = getinstances() assert(typeof(instances) == string.char(116,97,98,108,101), string.char(103,101,116,105,110,115,116,97,110,99,101,115,32,100,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,116,97,98,108,101)) assert(#instances > 0, string.char(78,111,32,105,110,115,116,97,110,99,101,115,32,114,101,116,117,114,110,101,100)) assert(instances[1]:IsA(string.char(73,110,115,116,97,110,99,101)), string.char(70,105,114,115,116,32,101,108,101,109,101,110,116,32,105,115,32,110,111,116,32,97,110,32,73,110,115,116,97,110,99,101)) end, Gethui = function() local _0xf97fcc = gethui() assert(typeof(hui) == string.char(73,110,115,116,97,110,99,101), string.char(103,101,116,104,117,105,32,100,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,110,32,73,110,115,116,97,110,99,101)) assert(hui:IsA(string.char(83,99,114,101,101,110,71,117,105)) or hui:IsA(string.char(71,117,105,66,97,115,101,50,100)) or hui:IsA(string.char(70,111,108,100,101,114)),string.char(103,101,116,104,117,105,32,114,101,116,117,114,110,101,100,32,97,110,32,117,110,101,120,112,101,99,116,101,100,32,105,110,115,116,97,110,99,101,32,116,121,112,101,58,32) .. hui.ClassName) end, SetHiddenproperty = function() local _0x548835 = Instance.new(string.char(70,105,114,101)) local _0x188502 = sethiddenproperty(fire, string.char(115,105,122,101,95,120,109,108), 10) assert(success == true, string.char(70,97,105,108,101,100,32,116,111,32,115,101,116,32,104,105,100,100,101,110,32,112,114,111,112,101,114,116,121,32,39,115,105,122,101,95,120,109,108,39)) local _0xe15808 = gethiddenproperty(fire, string.char(115,105,122,101,95,120,109,108)) assert(value == 10, string.char(72,105,100,100,101,110,32,112,114,111,112,101,114,116,121,32,39,115,105,122,101,95,120,109,108,39,32,110,111,116,32,115,101,116,32,99,111,114,114,101,99,116,108,121,32,40,101,120,112,101,99,116,101,100,32,49,48,44,32,103,111,116,32) .. tostring(value) .. string.char(41)) end, GetHiddenproperty = function() local _0x548835 = Instance.new(string.char(70,105,114,101)) sethiddenproperty(fire, string.char(115,105,122,101,95,120,109,108), 5) local _0xe15808 = gethiddenproperty(fire, string.char(115,105,122,101,95,120,109,108)) assert(value == 5, string.char(72,105,100,100,101,110,32,112,114,111,112,101,114,116,121,32,118,97,108,117,101,32,109,105,115,109,97,116,99,104,58,32,101,120,112,101,99,116,101,100,32,53,44,32,103,111,116,32) .. tostring(value)) end, isreadonly = function() local _0x42a6f5 = {} local _0x188502, err if table.freeze then table.freeze(object) else error(string.char(116,97,98,108,101,46,102,114,101,101,122,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,116,104,105,115,32,101,110,118,105,114,111,110,109,101,110,116)) end success, err = pcall(function() object._test = string.char(115,104,111,117,108,100,32,102,97,105,108) end) assert(not success, string.char(79,98,106,101,99,116,32,97,99,99,101,112,116,101,100,32,109,111,100,105,102,105,99,97,116,105,111,110,32,97,102,116,101,114,32,102,114,101,101,122,105,110,103)) assert(isreadonly and isreadonly(object), string.char(70,117,110,99,116,105,111,110,32,109,105,115,115,105,110,103,32,111,114,32,114,101,116,117,114,110,101,100,32,102,97,108,115,101)) end, setreadonly = function() assert(typeof(setreadonly) == string.char(102,117,110,99,116,105,111,110), string.char(115,101,116,114,101,97,100,111,110,108,121,32,110,111,116,32,97,118,97,105,108,97,98,108,101)) local _0x42a6f5 = { _canWrite = false } setreadonly(object, true) local _0x188502 = false local _0xca9568 local _0x5c055c, err = pcall(function() object._canWrite = true end) success, message = ok, err assert(not success, string.char(84,97,98,108,101,32,119,97,115,32,115,116,105,108,108,32,119,114,105,116,97,98,108,101,32,97,102,116,101,114,32,115,101,116,116,105,110,103,32,116,111,32,114,101,97,100,111,110,108,121)) setreadonly(object, false) object._canWrite = true assert(object._canWrite == true, string.char(85,110,102,114,101,101,122,105,110,103,32,116,104,101,32,116,97,98,108,101,32,100,105,100,32,110,111,116,32,114,101,115,116,111,114,101,32,119,114,105,116,97,98,105,108,105,116,121)) end, cryptbase64encode = function() local _0xbb9779 = crypt.base64encode(string.char(116,101,115,116)) assert(result == string.char(100,71,86,122,100,65,61,61), string.char(73,110,99,111,114,114,101,99,116,32,98,97,115,101,54,52,32,101,110,99,111,100,105,110,103,32,114,101,115,117,108,116,58,32) .. tostring(result)) assert(crypt.base64decode(result) == string.char(116,101,115,116), string.char(82,111,117,110,100,116,114,105,112,32,100,101,99,111,100,105,110,103,32,109,105,115,109,97,116,99,104)) end, cryptbase64decode = function() local _0xbb9779 = crypt.base64decode(string.char(100,71,86,122,100,65,61,61)) assert(result == string.char(116,101,115,116), string.char(73,110,99,111,114,114,101,99,116,32,98,97,115,101,54,52,32,100,101,99,111,100,105,110,103,32,114,101,115,117,108,116,58,32) .. tostring(result)) end, cryptencrypt = function() local _0x7325e1 = crypt.generatekey() assert(key, string.char(75,101,121,32,103,101,110,101,114,97,116,105,111,110,32,102,97,105,108,101,100)) local _0x87c74b, iv = crypt.encrypt(string.char(116,101,115,116), key, nil, string.char(67,66,67)) assert(encrypted and iv, string.char(69,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,32,111,114,32,73,86,32,109,105,115,115,105,110,103)) local _0xdd3a34 = crypt.decrypt(encrypted, key, iv, string.char(67,66,67)) assert(decrypted == string.char(116,101,115,116), string.char(68,101,99,114,121,112,116,101,100,32,114,101,115,117,108,116,32,109,105,115,109,97,116,99,104,58,32) .. tostring(decrypted)) end, cryptdecrypt = function() local _0x7325e1, iv = crypt.generatekey(), crypt.generatekey() assert(key and iv, string.char(75,101,121,32,111,114,32,73,86,32,103,101,110,101,114,97,116,105,111,110,32,102,97,105,108,101,100)) local _0x87c74b = crypt.encrypt(string.char(116,101,115,116), key, iv, string.char(67,66,67)) assert(encrypted, string.char(69,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100)) local _0xdd3a34 = crypt.decrypt(encrypted, key, iv, string.char(67,66,67)) assert(decrypted == string.char(116,101,115,116), string.char(68,101,99,114,121,112,116,105,111,110,32,114,101,115,117,108,116,32,109,105,115,109,97,116,99,104,58,32) .. tostring(decrypted)) end, cryptgeneratebytes = function() local _0xf92cc3 = math.random(16, 64) local _0x6f4b00 = crypt.generatebytes(size) assert(type(encoded) == string.char(115,116,114,105,110,103), string.char(79,117,116,112,117,116,32,110,111,116,32,97,32,115,116,114,105,110,103)) local _0x188502, decoded = pcall(crypt.base64decode, encoded) assert(success and type(decoded) == string.char(115,116,114,105,110,103), string.char(68,101,99,111,100,105,110,103,32,102,97,105,108,101,100)) assert(#decoded == size, (string.char(69,120,112,101,99,116,101,100,32,37,100,32,98,121,116,101,115,44,32,103,111,116,32,37,100)):format(size, #decoded)) end, cryptgeneratekey = function() local _0x7325e1 = crypt.generatekey() assert(type(key) == string.char(115,116,114,105,110,103), string.char(75,101,121,32,105,115,32,110,111,116,32,97,32,115,116,114,105,110,103)) local _0x188502, decoded = pcall(crypt.base64decode, key) assert(success and #decoded == 32, string.char(75,101,121,32,115,104,111,117,108,100,32,100,101,99,111,100,101,32,116,111,32,51,50,32,98,121,116,101,115)) end, crypthash = function() assert(crypt and typeof(crypt.hash) == string.char(102,117,110,99,116,105,111,110), string.char(102,117,110,99,116,105,111,110,32,95,48,120,50,100,102,54,101,49,52,98,32,110,105,108)) local _0x9f94a2 = string.char(116,101,115,116) local _0xb34d32 = { string.char(115,104,97,49), string.char(109,100,53), string.char(115,104,97,50,53,54), string.char(115,104,97,51,56,52), string.char(115,104,97,53,49,50), string.char(115,104,97,51,45,50,50,52), string.char(115,104,97,51,45,50,53,54), string.char(115,104,97,51,45,53,49,50), } for algorithm, expectedLength in pairs(expected_lengths) do local _0xa4fa57 = crypt.hash(test_input, algorithm) assert(type(hash) == string.char(115,116,114,105,110,103), string.char(72,97,115,104,32,114,101,115,117,108,116,32,102,111,114,32,39) .. algorithm .. string.char(39,32,105,115,32,110,111,116,32,97,32,115,116,114,105,110,103)) end end, SetClipboard = function() assert(type(setclipboard) == string.char(102,117,110,99,116,105,111,110)) local _0x2e4e44 = string.char(67,108,105,112,98,111,97,114,100,84,101,115,116,95) .. tostring(math.random(100000, 999999)) local _0x188502 = pcall(function() if setclipboard then setclipboard(testString) else error(string.char(115,101,116,99,108,105,112,98,111,97,114,100,32,110,111,116,32,97,118,97,105,108,97,98,108,101)) end end) assert(success, string.char(115,101,116,99,108,105,112,98,111,97,114,100,32,102,97,105,108,101,100,32,116,111,32,114,117,110)) if old then pcall(function() setclipboard(old) end) end end, getscriptclosure = function() assert(typeof(getscriptclosure) == string.char(102,117,110,99,116,105,111,110), string.char(102,117,110,99,116,105,111,110,32,95,48,120,49,54,55,99,98,54,100,53,32,110,105,108)) local _0x7c64e9 = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild(string.char(65,110,105,109,97,116,101)) assert(module and (module:IsA(string.char(76,111,99,97,108,83,99,114,105,112,116)) or module:IsA(string.char(77,111,100,117,108,101,83,99,114,105,112,116))), string.char(115,99,114,105,112,116,32,110,111,116,32,102,111,117,110,100,32,111,114,32,105,110,118,97,108,105,100)) local _0xe32529 = getscriptclosure(module) assert(typeof(closure) == string.char(102,117,110,99,116,105,111,110), string.char(70,97,105,108,101,100,32,116,111,32,114,101,116,114,105,101,118,101,32,118,97,108,105,100,32,99,108,111,115,117,114,101,32,102,114,111,109,32,115,99,114,105,112,116)) return closure end, iscclosure = function() assert(iscclosure(print) == true, string.char(82,111,98,108,111,120,32,110,97,116,105,118,101,32,102,117,110,99,116,105,111,110,32,39,112,114,105,110,116,39,32,115,104,111,117,108,100,32,98,101,32,97,32,67,32,99,108,111,115,117,114,101)) assert(iscclosure(function() end) == false, string.char(76,117,97,32,102,117,110,99,116,105,111,110,32,95,48,120,56,55,101,53,102,57,55,56,32,97,115,32,67,32,99,108,111,115,117,114,101)) end, islclosure = function() local _0x60793d = function() end assert(islclosure(f) == true, string.char(70,97,105,108,101,100,32,116,111,32,100,101,116,101,99,116,32,98,97,115,105,99,32,76,117,97,32,99,108,111,115,117,114,101)) assert(islclosure(print) == false, string.char(82,111,98,108,111,120,32,110,97,116,105,118,101,32,102,117,110,99,116,105,111,110,32,39,112,114,105,110,116,39,32,115,104,111,117,108,100,32,110,111,116,32,98,101,32,97,32,76,117,97,32,99,108,111,115,117,114,101)) end, isexecutorclosure = function() assert(isexecutorclosure(isexecutorclosure), string.char(39,105,115,101,120,101,99,117,116,111,114,99,108,111,115,117,114,101,39,32,105,116,115,101,108,102,32,115,104,111,117,108,100,32,114,101,116,117,114,110,32,116,114,117,101)) assert(isexecutorclosure(newcclosure(function() end)) == true, string.char(69,120,101,99,117,116,111,114,32,67,32,99,108,111,115,117,114,101,32,119,97,115,32,110,111,116,32,100,101,116,101,99,116,101,100)) assert(isexecutorclosure(function() end) == true, string.char(69,120,101,99,117,116,111,114,32,76,117,97,117,32,99,108,111,115,117,114,101,32,119,97,115,32,110,111,116,32,100,101,116,101,99,116,101,100)) assert(isexecutorclosure(print) == false, string.char(82,111,98,108,111,120,32,105,110,116,101,114,110,97,108,32,102,117,110,99,116,105,111,110,32,95,48,120,55,101,49,56,101,55,100,102,32,99,108,97,115,115,105,102,105,101,100)) end, isrenderobj = function() local _0x0d21e7 = Drawing.new(string.char(84,101,120,116)) draw.Text = string.char(84,101,115,116) draw.Visible = true assert(isrenderobj(draw) == true, string.char(86,97,108,105,100,32,68,114,97,119,105,110,103,32,111,98,106,101,99,116,32,110,111,116,32,100,101,116,101,99,116,101,100)) assert(isrenderobj({}) == false, string.char(80,108,97,105,110,32,116,97,98,108,101,32,105,110,99,111,114,114,101,99,116,108,121,32,100,101,116,101,99,116,101,100,32,97,115,32,114,101,110,100,101,114,32,111,98,106,101,99,116)) end, getrenderproperty = function() local _0x0d21e7 = Drawing.new(string.char(67,105,114,99,108,101)) draw.Visible = true local _0xe37683 = getrenderproperty(draw, string.char(86,105,115,105,98,108,101)) assert(type(vis) == string.char(98,111,111,108,101,97,110), string.char(69,120,112,101,99,116,101,100,32,98,111,111,108,101,97,110,32,102,114,111,109,32,86,105,115,105,98,108,101,32,112,114,111,112,101,114,116,121)) local _0x188502, result = pcall(function() return getrenderproperty(draw, string.char(84,114,97,110,115,112,97,114,101,110,99,121)) end) assert(success, string.char(102,97,105,108,101,100,32,117,110,101,120,112,101,99,116,101,100,108,121)) assert(type(result) == string.char(110,117,109,98,101,114), string.char(69,120,112,101,99,116,101,100,32,110,117,109,98,101,114,32,102,114,111,109,32,84,114,97,110,115,112,97,114,101,110,99,121,32,112,114,111,112,101,114,116,121)) end, setrenderproperty = function() local _0x0d21e7 = Drawing.new(string.char(83,113,117,97,114,101)) setrenderproperty(draw, string.char(86,105,115,105,98,108,101), false) assert(draw.Visible == false, string.char(100,105,100,32,110,111,116,32,117,112,100,97,116,101,32,118,105,115,105,98,105,108,105,116,121)) setrenderproperty(draw, string.char(86,105,115,105,98,108,101), true) end, cleardrawcache = function() local _0x9bbdda = Drawing.new(string.char(84,101,120,116)) test.Text = string.char(84,101,115,116) test.Visible = true cleardrawcache() assert(true, string.char(99,108,101,97,114,100,114,97,119,99,97,99,104,101,32,115,104,111,117,108,100,32,110,111,116,32,116,104,114,111,119)) end, getcustomasset = function() assert(typeof(getcustomasset) == string.char(102,117,110,99,116,105,111,110), string.char(102,117,110,99,116,105,111,110,32,95,48,120,97,54,101,99,55,99,98,101,32,110,105,108)) assert(typeof(writefile) == string.char(102,117,110,99,116,105,111,110), string.char(39,119,114,105,116,101,102,105,108,101,39,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,46)) assert(typeof(isfile) == string.char(102,117,110,99,116,105,111,110), string.char(39,105,115,102,105,108,101,39,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,46)) assert(typeof(game.HttpGet) == string.char(102,117,110,99,116,105,111,110), string.char(39,72,116,116,112,71,101,116,39,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,46)) assert(crypt and typeof(crypt.base64decode) == string.char(102,117,110,99,116,105,111,110), string.char(39,99,114,121,112,116,46,98,97,115,101,54,52,100,101,99,111,100,101,39,32,110,111,116,32,97,118,97,105,108,97,98,108,101)) local _0x6f4b00 = game:HttpGet(string.char(104,116,116,112,115,58,47,47,103,105,116,108,97,98,46,99,111,109,47,115,101,110,115,51,47,110,101,98,117,110,117,47,45,47,114,97,119,47,109,97,105,110,47,101,110,99,111,100,101,100,66,121,116,101,99,111,100,101,46,116,120,116)) assert(encoded and #encoded > 1000, string.char(69,110,99,111,100,101,100,32,98,121,116,101,99,111,100,101,32,109,105,115,115,105,110,103,32,111,114,32,99,111,114,114,117,112,116,101,100,46)) local _0xc26715 = crypt.base64decode(encoded) assert(decoded and #decoded > 1000, string.char(68,101,99,111,100,105,110,103,32,102,97,105,108,101,100,32,111,114,32,116,111,111,32,115,104,111,114,116)) writefile(string.char(69,120,97,109,112,108,101,83,111,117,110,100,46,109,112,51), decoded) assert(isfile(string.char(69,120,97,109,112,108,101,83,111,117,110,100,46,109,112,51)), string.char(70,105,108,101,32,119,97,115,32,110,111,116,32,99,114,101,97,116,101,100)) local _0x5f4a28 = getcustomasset(string.char(69,120,97,109,112,108,101,83,111,117,110,100,46,109,112,51)) assert(typeof(assetId) == string.char(115,116,114,105,110,103) and assetId:find(string.char(114,98,120,97,115,115,101,116,58,47,47)) or assetId:find(string.char(69,120,97,109,112,108,101,83,111,117,110,100)), string.char(103,101,116,99,117,115,116,111,109,97,115,115,101,116,32,114,101,116,117,114,110,101,100,32,105,110,118,97,108,105,100,32,112,97,116,104)) local _0x04d233 = Instance.new(string.char(83,111,117,110,100)) sound.SoundId = assetId sound.Volume = 0.5 sound.Parent = workspace sound:Play() task.delay(2, function() sound:Destroy() end) end, restorefunction = function() local _0x56ca7d = function() return string.char(111,114,105,103,105,110,97,108) end local _0xad17c7 = clonefunction(testFunc) hookfunction(testFunc, function() return string.char(109,111,100,105,102,105,101,100) end) assert(testFunc() == string.char(109,111,100,105,102,105,101,100), string.char(72,111,111,107,105,110,103,32,102,97,105,108,101,100)) restorefunction(testFunc, backup) assert(testFunc() == string.char(111,114,105,103,105,110,97,108), string.char(100,105,100,32,110,111,116,32,114,101,115,116,111,114,101,32,111,114,105,103,105,110,97,108,32,98,101,104,97,118,105,111,114)) end, getscripts = function() local _0xd83cec = getscripts() assert(type(results) == string.char(116,97,98,108,101), string.char(100,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,116,97,98,108,101)) local _0x35c71a = false local _0xb3d1c0 = false for _, scriptObj in ipairs(results) do if typeof(scriptObj) == string.char(73,110,115,116,97,110,99,101) then local _0xc77a2c = scriptObj.ClassName if className == string.char(76,111,99,97,108,83,99,114,105,112,116) then foundLocalScript = true end if className == string.char(77,111,100,117,108,101,83,99,114,105,112,116) then foundModuleScript = true end end end assert(foundLocalScript, string.char(78,111,32,76,111,99,97,108,83,99,114,105,112,116,32,102,111,117,110,100,44,32,115,112,111,111,102,105,110,103,32,111,114,32,112,97,116,99,104,105,110,103,32,100,101,116,101,99,116,101,100)) assert(foundModuleScript, string.char(78,111,32,77,111,100,117,108,101,83,99,114,105,112,116,32,102,111,117,110,100,44,32,115,112,111,111,102,105,110,103,32,111,114,32,112,97,116,99,104,105,110,103,32,100,101,116,101,99,116,101,100)) end, isrbxfocused = function() assert(type(isrbxfocused) == string.char(102,117,110,99,116,105,111,110), string.char(70,117,110,99,116,105,111,110,32,105,115,32,110,105,108)) local _0x1dc2b0 = isrbxfocused() assert(type(focused) == string.char(98,111,111,108,101,97,110), string.char(68,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,98,111,111,108,101,97,110)) end, isrbxactive = function() assert(type(isrbxactive) == string.char(102,117,110,99,116,105,111,110), string.char(70,117,110,99,116,105,111,110,32,105,115,32,110,105,108)) local _0xba2636 = isrbxactive() assert(type(active) == string.char(98,111,111,108,101,97,110), string.char(68,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,98,111,111,108,101,97,110)) end, Clonefunction = function() assert(type(clonefunction) == string.char(102,117,110,99,116,105,111,110), string.char(70,117,110,99,116,105,111,110,32,105,115,32,110,105,108)) local _0x8e8bcd world() print(string.char(72,101,108,108,111,32,119,111,114,108,100)) end local _0x6cde41 = clonefunction(world) local _0x10218b = debug.info(cloned_function, string.char(108)) assert(type(line_defined) == string.char(110,117,109,98,101,114), string.char(70,97,105,108,101,100,32,116,111,32,103,101,116,32,108,105,110,101,32,105,110,102,111)) local _0x00e9de = debug.info(cloned_function, string.char(110)) assert(name_info == string.char(119,111,114,108,100) or name_info == nil, string.char(70,117,110,99,116,105,111,110,32,110,97,109,101,32,109,105,115,109,97,116,99,104)) assert(cloned_function ~= world, string.char(67,108,111,110,101,100,32,102,117,110,99,116,105,111,110,32,95,48,120,101,53,101,101,56,97,55,97,32,116,104,101,32,115,97,109,101,32,97,115,32,116,104,101,32,111,114,105,103,105,110,97,108)) assert(getfenv(cloned_function) == getfenv(world), string.char(69,110,118,105,114,111,110,109,101,110,116,115,32,100,111,32,110,111,116,32,109,97,116,99,104)) local _0x188502, err = pcall(cloned_function) end, }
        end
    else
        error("Invalid execution environment!", 0)
    end
end

local _exec_func = _0x6bb5cef6[1]
if _exec_func and type(_exec_func) == "function" then
    _exec_func()
else
    error("Execution validation failed!", 0)
end
